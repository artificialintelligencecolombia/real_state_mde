# =======================
# pip and venv Fundamentals
# =======================

# `pip` is the package installer for Python. It allows you to install and manage additional packages that are not part of the Python standard library.

# `venv` is a module used to create isolated Python environments. Each environment has its own Python binary and can have its own independent set of installed Python packages.

# -----------------------
# Checking Python and pip
# -----------------------

# Verify the Python version:
# python --version
# python3 --version

# Check where Python is executing from:
# which python
# which python3

# Verify pip version:
# pip --version
# pip3 --version

# Check where pip is executing from:
# which pip
# which pip3

# -----------------------
# Installing venv
# -----------------------

# On some systems, the venv module does not come pre-installed. Install it using:
# sudo apt install -y python3-venv

# -----------------------
# Creating a Virtual Environment
# -----------------------

# To create a virtual environment, navigate to your project's directory and run:
# python3 -m venv env_name

# This creates a folder in the current directory which will contain the Python executable files and a copy of the pip library.

# -----------------------
# Activating the Virtual Environment
# -----------------------

# Activate the virtual environment:
# source env_name/bin/activate

# Once activated, your terminal prompt will change to show the name of the activated environment.

# -----------------------
# Installing Packages using pip
# -----------------------

# With the virtual environment activated, you can install packages locally:
# pip install package_name

# -----------------------
# Managing Packages
# -----------------------

# List installed packages:
# pip list

# Upgrade a package:
# pip install --upgrade package_name

# Uninstall a package:
# pip uninstall package_name

# -----------------------
# Requirements File
# -----------------------

# To generate a requirements.txt file (which lists all of the dependencies in your project):
# pip freeze > requirements.txt

# To install dependencies from a requirements.txt file:
# pip install -r requirements.txt

# -----------------------
# Deactivating the Virtual Environment
# -----------------------

# To deactivate the virtual environment and return to the global Python environment:
# deactivate

# -----------------------
# Removing a Virtual Environment
# -----------------------

# If you want to delete the virtual environment, deactivate it and then:
# rm -rf env_name

# =======================
# End of pip and venv Fundamentals
# =======================
